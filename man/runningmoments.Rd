% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/RcppExports.R
\name{run_sd3}
\alias{run_centered}
\alias{run_kurt5}
\alias{run_scaled}
\alias{run_sd3}
\alias{run_skew4}
\alias{run_tscored}
\alias{run_zscored}
\title{Compute first K moments over a sliding window}
\usage{
run_sd3(v, winsize = NA_integer_, recoper = 100L, na_rm = FALSE)

run_skew4(v, winsize = NA_integer_, recoper = 100L, na_rm = FALSE)

run_kurt5(v, winsize = NA_integer_, recoper = 100L, na_rm = FALSE)

run_centered(v, winsize = NA_integer_, recoper = 1000L, na_rm = FALSE)

run_scaled(v, winsize = NA_integer_, recoper = 100L, na_rm = FALSE)

run_zscored(v, winsize = NA_integer_, recoper = 100L, na_rm = FALSE)

run_tscored(v, winsize = NA_integer_, recoper = 100L, na_rm = FALSE)
}
\arguments{
\item{v}{a vector}

\item{winsize}{the window size. if NA, equivalent to infinity.}

\item{recoper}{the recompute period. because subtraction of elements can cause
loss of precision, the computation of moments is restarted periodically based on 
this parameter. Larger values mean fewer restarts and faster, though less accurate
results. Note that the code checks for negative second and fourth moments and
recomputes when needed.}

\item{na_rm}{whether to remove NA, false by default.}
}
\value{
a matrix; the first columns are the kth, k-1th through 2nd standardized, centered moment,
then a column of the mean, then a column of the number of (non-nan) elements in the input.
When there are not sufficient (non-nan) elements for the computation, NaN are returned.
}
\description{
Compute the (standardized) 2nd through kth moments, the mean, and the number of elements over
an infinite or finite sliding window, returning a matrix.
}
\details{
Computes the number of elements, the mean, and the 2nd through kth
centered standardized moment, for \eqn{k=2,3,4}{k=2,3,4}. These
are computed via the numerically robust one-pass method of Bennett \emph{et. al.}
In general they will \emph{not} match exactly with the 'standard'
implementations, due to differences in roundoff.

These methods are reasonably fast, on par with the 'standard' implementations.
However, they will usually be faster than calling the various standard implementations
more than once.
}
\note{
the kurtosis is \emph{excess kurtosis}, with a 3 subtracted, and should be nearly zero
for Gaussian input.
}
\examples{
x <- rnorm(1e5)
run_sd3(x,10)
run_skew4(x,10)
run_kurt5(x,500)

}
\author{
Steven E. Pav \email{shabbychef@gmail.com}
}
\references{
Terriberry, T. "Computing Higher-Order Moments Online."
\url{http://people.xiph.org/~tterribe/notes/homs.html}

J. Bennett, et. al., "Numerically Stable, Single-Pass, 
Parallel Statistics Algorithms," Proceedings of IEEE
International Conference on Cluster Computing, 2009.
\url{https://www.semanticscholar.org/paper/Numerically-stable-single-pass-parallel-statistics-Bennett-Grout/a83ed72a5ba86622d5eb6395299b46d51c901265}

Cook, J. D. "Accurately computing running variance."
\url{http://www.johndcook.com/standard_deviation.html}

Cook, J. D. "Comparing three methods of computing 
standard deviation."
\url{http://www.johndcook.com/blog/2008/09/26/comparing-three-methods-of-computing-standard-deviation}
}
\seealso{
firstmoments
}

